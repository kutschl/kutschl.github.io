[{"C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\index.js":"1","C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\feed.js":"2","C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\modal\\modal.js":"3","C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\header\\header.js":"4"},{"size":506,"mtime":1647455544236,"results":"5","hashOfConfig":"6"},{"size":601,"mtime":1646977591469,"results":"7","hashOfConfig":"6"},{"size":3434,"mtime":1647453632246,"results":"8","hashOfConfig":"6"},{"size":1844,"mtime":1647457815431,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v7h7jc",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\index.js",[],[],"C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\feed.js",["26"],[],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './feed.css';\r\n\r\nclass Feed extends Component {\r\n    render() {\r\n        const elements = []\r\n        for (let i = 0; i<10; i++) {\r\n            elements.push(\"TESTITEST\")\r\n        }\r\n        const divs = []\r\n        for (const[index, value] of elements.entries()) {\r\n            divs.push(<div key={index} className={\"post-container\"}>{value}</div>)\r\n        }\r\n        return (\r\n            <div className={\"feed-container\"}>\r\n                {divs}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Feed",["27","28"],"C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\modal\\modal.js",["29","30","31","32","33","34","35"],[],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\nimport * as data from'./modaldata.json'\n\nclass Modal extends Component {\n    render() {\n        return (\n            <div className={\"modal-container modal-container-collapsed\"}>\n                <div className={\"modal\"}>\n                    <Navigation/>\n                    <Info/>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <div className={\"nav-container\"}>\n                <div className={\"nav-box\"}>\n                    <span className={\"nav-link-box\"}><a href={\"\"} className={\"nav-link\"}>Team</a></span>\n                </div>\n                <div className={\"nav-box\"}>\n                    <span className={\"nav-link-box\"}><a href={\"\"} className={\"nav-link\"}>Projekte</a></span>\n                </div>\n                <div className={\"nav-box\"}>\n                    <span className={\"nav-link-box\"}><a href={\"\"} className={\"nav-link\"}>Impressum</a></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Info extends Component{\n    render() {\n\n        return (\n            <div className={\"info-container\"}>\n                <InfoAbout/>\n                <InfoContact/>\n                <InfoSkills/>\n            </div>\n        )\n    }\n}\n\nclass InfoAbout extends Component {\n    render() {\n        const Input = require('./modaldata.json').About\n\n        const Links = []\n\n        for(let i of Input.content.team) {\n            Links.push(<span className={\"info-link-box\"}><a target={\"_blank\"} className={'info-link'} href={i.link}>{i.id}</a></span>);\n        }\n\n        return (\n            <div className={'info-box'}>\n                <h3 className={'info-h3'}>\n                    {Input.name}\n                </h3>\n                <p className={'info-p'}>\n                    {Input.content.text[0]}\n                </p>\n                <p className={'info-p'}>\n                    {Input.content.text[1]}\n                    {Links}\n                </p>\n            </div>\n        )\n    }\n}\n\nclass InfoContact extends Component {\n    render() {\n        const Input = require('./modaldata.json').Contact\n\n        const Links = []\n\n        for(let i of Input.content.links) {\n            Links.push(<p className={\"info-p\"}><span className={\"info-link-box\"}><a target={\"_blank\"} className={'info-link'} href={i.link}>{i.id}</a></span></p>);\n        }\n\n        return (\n            <div className={'info-box'}>\n                <h3 className={'info-h3'}>\n                    {Input.name}\n                </h3>\n                {Links}\n            </div>\n        )\n    }\n}\n\nclass InfoSkills extends Component {\n    render() {\n        const Input = require('./modaldata.json').Skills\n\n        const Input_Table = []\n\n        for(let i of Input.content[\"skill-list\"]) {\n            const Input_Row = []\n            for(let j of i) {\n                Input_Row.push(<td className={'info-td'}>{j}</td>)\n            }\n            Input_Table.push(<tr className={'info-tr'}>{Input_Row}</tr>)\n        }\n\n        return (\n            <div className={'info-box'}>\n                <h3 className={'info-h3'}>\n                    {Input.name}\n                </h3>\n                <table className={'info-table'}>\n                    {Input_Table}\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default Modal","C:\\Users\\Lukas\\Desktop\\kutschl2.github.io\\abstrakt-app\\src\\components\\header\\header.js",["36","37","38"],[],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './header.css';\nimport '../modal/modal.css';\nimport LogoSVG from './logo.svg'\n\nclass Header extends Component {\n    render() {\n        return(\n            <div className={\"header-container\"}>\n                <Logo/>\n                <ModalToggle/>\n            </div>\n        )\n    }\n}\n\nclass Logo extends Component {\n    render() {\n        return (\n            <div className={\"logo-container\"}>\n                <div className={\"logo-box\"}>\n                    <a className={\"a-logo\"}>\n\n\n    {/*\n                        <span className={\"logo\"}>Abstrakt <br/> Studio</span>\n    */}\n\n\n\n\n                        <img className={\"logo\"} src={LogoSVG} alt={\"Logo\"}/>\n\n\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass ModalToggle extends Component {\n    render() {\n        function openModal() {\n            let element = document.querySelector(\".modal-container\").classList\n            if (element.contains(\"modal-container-collapsed\")) {\n                element.remove(\"modal-container-collapsed\")\n                element.add(\"modal-container-expanded\")\n            }\n            else {\n                element.remove(\"modal-container-expanded\")\n                element.add(\"modal-container-collapsed\")\n            }\n        }\n\n\n        return (\n            <div className={\"modal-toggle-container\"}>\n                <div className={\"modal-toggle-box\"}>\n                    <a className={\"a-modal-toggle\"} onClick={openModal}>\n                        <div className={\"modal-toggle-line\"}/>\n                        <div className={\"modal-toggle-line\"}/>\n                        <div className={\"modal-toggle-line\"}/>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header",{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"39","severity":1,"message":"47","line":4,"column":13,"nodeType":"41","messageId":"42","endLine":4,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":24,"column":54,"nodeType":"50","endLine":24,"endColumn":90},{"ruleId":"48","severity":1,"message":"49","line":27,"column":54,"nodeType":"50","endLine":27,"endColumn":90},{"ruleId":"48","severity":1,"message":"49","line":30,"column":54,"nodeType":"50","endLine":30,"endColumn":90},{"ruleId":"51","severity":1,"message":"52","line":57,"column":58,"nodeType":"50","messageId":"53","endLine":57,"endColumn":117,"fix":"54"},{"ruleId":"51","severity":1,"message":"52","line":84,"column":82,"nodeType":"50","messageId":"53","endLine":84,"endColumn":141,"fix":"55"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"56","line":23,"column":21,"nodeType":"50","endLine":23,"endColumn":45},{"ruleId":"48","severity":1,"message":"56","line":61,"column":21,"nodeType":"50","endLine":61,"endColumn":73},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'data' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"59","text":"60"},{"range":"61","text":"60"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[1648,1648]," rel=\"noreferrer\"",[2435,2435]]